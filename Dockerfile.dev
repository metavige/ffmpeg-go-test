FROM        golang:1.8-alpine

# CMD         ["--help"]
# ENTRYPOINT  ["ffmpeg"]
WORKDIR     /tmp/workdir

ENV         FFMPEG_VERSION=3.3.1     \
            FDKAAC_VERSION=0.1.5      \
            LAME_VERSION=3.99.5       \
            OGG_VERSION=1.3.2         \
            OPENCOREAMR_VERSION=0.1.4 \
            OPUS_VERSION=1.1.4        \
            THEORA_VERSION=1.1.1      \
            VORBIS_VERSION=1.3.5      \
            VPX_VERSION=1.6.1         \
            X264_VERSION=20170226-2245-stable \
            X265_VERSION=2.3          \
            XVID_VERSION=1.3.4        \
            PKG_CONFIG_PATH=/usr/local/lib/pkgconfig \
            SRC=/usr/local

COPY    install /insts

RUN     set -e \
        && buildDeps="autoconf \
                   automake \
                   bash \
                   binutils \
                   bzip2 \
                   cmake \
                   coreutils \
                   g++ \
                   gnupg \
                   libtool \
                   make \
                   python \
                   tar \
                   yasm \
                   zlib-dev" \
        && export MAKEFLAGS="-j$(($(grep -c ^processor /proc/cpuinfo) + 1))" \
        && echo "==============================" \
        && echo "=====> Install apk packages " \
        && echo "==============================" \
        && apk add --update ${buildDeps} gcc git curl openssl-dev libgcc libstdc++ ca-certificates \
        # \
RUN     set -e \
        && for inst in $(ls /insts/*.install); do sh -e "${inst}"; done

# RUN sh /install.sh

# RUN /install/opencore-amr.install 
# RUN /install/libx264.install 
# RUN /install/libx265.install
# RUN /install/libogg.install
# RUN /install/libopus.install
# RUN /install/libvorbis.install
# RUN /install/libtheora.install
# RUN /install/libvpx.install
# RUN /install/libmp3lame.install
# RUN /install/xvid.install
# RUN /install/fdk-aac.install

# RUN /install/ffmpeg.install

# # install golang - snickers
#       && echo "=============================="
#       && echo "=====> install snickers..... " \
#       && echo "=============================="
#       && go get -v -u github.com/snickers/snickers

# cleanup
        # && echo "=====> cleanup..... " \
        # && cd \
        # && apk del ${buildDeps} \
	# && rm -rf /var/cache/apk/* /usr/local/include
        
# RUN ffmpeg -buildconf
